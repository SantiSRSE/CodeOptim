function [ Tdif, Hdif, Wn] = evolution( T,H,iter,Wn,flagW )
% EVOLUTION calculate the differences between inputs (norm and y metric)
% and recast them to adequeate them to output conditions
%
%Input
%T: transformation matrix (displacement)
%H:values of the metric for each iteration
%iter: current iteration 
%Wn: weight matriz
%flagW: flag de activación del algoritmo de adapatación de la matriz de
%paso
%
%Salidas
%Tdif: Diferencia de la norma de la matriz de transformación
%Hdif: Diferencia entre la métrica de las dos últimas iteraciones
%Wn: nueva matriz de paso

%cálculo de las diferencias para las condiciones de salida
%norma
if  ndims(T)==2   %traslacional
    if size(T,1)==2
        Tdif=norm(T);
    elseif  size(T,1)==3  %rígida
        %ponderacion de la norma (1./Wn)/((1/peso1n) +(1/peso2n) +(1/peso3n))
        Tdif= norm(1./(Wn*(sum(1./(Wn(:,1))))).*T);
    end
elseif ndims(T)==4 % b-splines
    %norma de todos los elementos en fila
    Tdif=norm(T(:));
end

%metrica
Hdif=H(1,iter)-H(1,iter+1);
% adaptacion de Wn, flagW la activa
if flagW
    if Hdif>0
        Wn=Wn*1.2;
    else
        Wn=Wn/2;
    end
end
